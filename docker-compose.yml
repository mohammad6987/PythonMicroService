version: "3.8"

services:

  api-gateway:
    build: ./api_gateway
    ports:
      - "5000:5000"
    environment:
      - ORDER_SERVICE_URL=http://order-service:5002
      - USER_SERVICE_URL=http://user-service:5001
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - order-service
      - user-service
      - kafka

  order-service:
    build: ./order_service
    ports:
      - "5002:5002"
    environment:
      - MONGO_URI=mongodb://mongo:27017/
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - mongo
      - kafka

  user-service:
    build: ./user_service
    ports:
      - "5001:5001"
    environment:
      - MONGO_URI=mongodb://mongo:27017/
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - mongo
      - kafka  

  mongo:
    image: docker.arvancloud.ir/mongo
    container_name: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  kafka:
    image: docker.arvancloud.ir/bitnami/kafka
    container_name: kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    volumes:
      - kafka_data:/bitnami/kafka

volumes:
  mongo_data:
  kafka_data:
